# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Alberto Dominguez
# This file is distributed under the same license as the Sec Lope De Vega
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sec Lope De Vega \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-18 17:08+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/index.rst:7
msgid "'Sec Lope De Vega' Project"
msgstr ""

#: ../../source/index.rst:10
msgid "Intro"
msgstr ""

#: ../../source/index.rst:11
msgid ""
"**Sec Lope de Vega** or just **Lope**, is an open source project licensed"
" under the `Mozilla Public License v2 <https://www.mozilla.org/en-"
"US/MPL/2.0/FAQ/>`_ . The origin of this was to be as a learning "
"playground for Python, Golang, ZeroMQ and some crypto capabilities. "
"However, this software is transformed into a project since it can be "
"potentially interesting and useful to the community. As far as what this "
"software does, it tries to be a *'Network Application Interactor' (NAI?)*"
" , which interacts with applications based on a set of rules "
"('conversation rules') using network protocols. To do so, this software "
"is able to work with **tcp** or **udp** connections in the two typical "
"modes:"
msgstr ""

#: ../../source/index.rst:18
msgid "Client mode (*Lope* connects to other systems or applications)"
msgstr ""

#: ../../source/index.rst:20
msgid "Server mode (other systems or applications connect to *Lope*)"
msgstr ""

#: ../../source/index.rst:22
msgid ""
"The *conversation rules* are not fixed, and they are fully configurable "
"by the operator of the software (you!). In that sense, this is the main "
"capability of this software: To provide complete flexibility in defining "
"how the interaction should be via some 'configuration files', and "
"optionally, adding some custom code if needed. Since this software works "
"at **tcp** or **udp** level, it tries to be as much as agnostic possible "
"for the application protocol."
msgstr ""

#: ../../source/index.rst:26
msgid ""
"This capability of defining your own interaction in the application "
"protocol you wish (if possible) is the main reason for the name of this "
"project. `Lope de Vega <https://en.wikipedia.org/wiki/Lope_de_Vega>`_ was"
" a famous Spanish writer in the Spanish Golden Age, who was quite "
"prolific in his work. Therefore, this software enables you to create many"
" 'interactions', potentially making you as 'prolific' as possible thanks "
"to the customization capabilities of this software. The term 'Sec' is a "
"kind of play on words using the idea of '`Sir "
"<https://en.wikipedia.org/wiki/Sir>`_' and focusing on the potential use "
"of this software for security reasons:"
msgstr ""

#: ../../source/index.rst:31
msgid ""
"In client mode, *Lope* can do some security tests when *he* connects to "
"other systems in an interactive approach (not sure if we can call this "
"`IAST <https://owasp.org/www-project-devsecops-guideline/latest/02c-"
"Interactive-Application-Security-Testing>`_. Since you can define how "
"many client connections to establish, it might be useful to try to do "
"some `DDoS <https://en.wikipedia.org/wiki/Denial-of-service_attack>`_ "
"testing too."
msgstr ""

#: ../../source/index.rst:35
msgid ""
"In server mode, *Lope* can work as a kind of honeypot (or a set of them, "
"this is explained in other sections)."
msgstr ""

#: ../../source/index.rst:37
msgid ""
"However, this software may be useful for other kind of tests that are not"
" only security related, such as mocking-up other systems (as a client or "
"as a server), potentially emulating user activity, as well as for doing "
"load and stress testing."
msgstr ""

#: ../../source/index.rst:40
msgid ""
"Regarding rules, there are three main types of **conversation rules** "
"that *Lope* can execute:"
msgstr ""

#: ../../source/index.rst:42
msgid ""
"**Basic Rules:** These rules are executed in specific situations and with"
" a limited set of options (for instance, at the time of the first "
"interaction, or the time-out event)."
msgstr ""

#: ../../source/index.rst:44
msgid ""
"**Synchronous Rules (or sync rules):** These rules as executed when a new"
" message is received in the connection with the third party system. Using"
" `regular expressions (RegEx) "
"<https://en.wikipedia.org/wiki/Regular_expression>`_ , *Lope* is able to "
"detect what rule or rules are applicable, and then, execute them."
msgstr ""

#: ../../source/index.rst:48
msgid ""
"**Asynchronous Rules (or async rules):** These rules are executed if a "
"previous rule triggers them, so any synchronous or asynchronous rule can "
"trigger one or several asynchronous rules."
msgstr ""

#: ../../source/index.rst:50
msgid ""
"As far as the architecture is respective, this software is made up of two"
" components:"
msgstr ""

#: ../../source/index.rst:52
msgid ""
"**The External Connectors:** These elements are those that interact "
"directly with the target system, they get the 'conversation rules' from "
"the **engine**, and they inform it about any interaction they do. There "
"can be several of external connectors working at the same time, working "
"with one **engine**. This software is coded in Python and the code can be"
" found `in this repository <https://github.com/4LB3R70D/SecLopeDeVega-"
"External_Connector>`_."
msgstr ""

#: ../../source/index.rst:56
msgid ""
"**The Engine:** This is the element that work as orchestrator and the "
"'heart' of the *Lope*. This controls the operation, sends the "
"corresponding 'conversation rules' to the **external connectors**, and "
"receives all activities generated by the **external connectors**.   This "
"software is coded in Go and the code can be found `here "
"<https://github.com/4LB3R70D/SecLopeDeVega-Engine>`_."
msgstr ""

#: ../../source/index.rst:61
msgid ""
"Please, consider this project as a **beta version** since some "
"capabilities (mainly the integration with other systems for sending "
"alerts, as well as the support of TLS) have not been fully tested."
msgstr ""

#: ../../source/index.rst:66
msgid "Contents"
msgstr ""

#: ../../source/index.rst:78
msgid "Indices and tables"
msgstr ""

#: ../../source/index.rst:80
msgid ":ref:`genindex`"
msgstr ""

#: ../../source/index.rst:81
msgid ":ref:`modindex`"
msgstr ""

#: ../../source/index.rst:82
msgid ":ref:`search`"
msgstr ""

